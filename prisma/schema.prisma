// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum JENIS_TRANSAKSI {
  PEMASUKAN
  PENGELUARAN
}

model User {
  id        String      @id @default(cuid())
  email     String      @unique
  name      String?
  Transaksi Transaksi[]
  Sumber    Sumber[]
  Tujuan    Tujuan[]
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
}

model Sumber {
  id        String      @id @default(cuid())
  user      User        @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  Transaksi Transaksi[]
  userId    String
  nama      String
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
}

model Tujuan {
  id        String      @id @default(cuid())
  user      User        @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId    String
  nama      String
  Transaksi Transaksi[]
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
}

model Transaksi {
  id         String          @id @default(cuid())
  user       User            @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId     String
  keterangan String
  jenis      JENIS_TRANSAKSI
  sumber     Sumber?         @relation(fields: [sumberId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  tujuan     Tujuan?         @relation(fields: [tujuanId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  sumberId   String
  tujuanId   String
  nominal    Int
  createdAt  DateTime        @default(now())
  updatedAt  DateTime        @updatedAt
}
